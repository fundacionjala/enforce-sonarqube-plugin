image: appirio/dx-java:latest

stages:
  - build
  - quality_scan
  - deploy
  - rollback

variables:
  JAR_LOCATION: "sonar-apex-plugin/target/*.jar"
  BACKUP_LOCATION: "apex-plugin-backup.jar"
  CODE_COVERAGE: "coverage"
  SONAR_PLUGIN_LOCATION: "sonar-plugins/apex-plugin.jar"

build_new_plugin:
  stage: build
  script:
    - mvn package -Dbuild.number=$CI_PIPELINE_ID
  cache:
    key: $CI_PIPELINE_ID
    paths:
      - apex-checks/target/
      - apex-squid/target/
      - apex-toolkit/target/
      - sonar-apex-plugin/target/
  artifacts:
    name: "CI_COMMIT_REF_NAME/$CI_JOB_ID"
    paths:
      - $JAR_LOCATION
    when: on_success
    expire_in: 1 week

sonarqube_publish:
  stage: quality_scan
  script:
    - sonar-scanner
      -Dsonar.host.url=https://sonar.appirio.com
      -Dsonar.login=$SONAR_LOGIN
      -Dsonar.projectKey=$CI_PROJECT_PATH_SLUG
      -Dsonar.links.scm=$CI_PROJECT_URL
      -Dsonar.projectVersion=$CI_PIPELINE_ID
      -Dsonar.java.binaries=$CI_PROJECT_DIR/apex-checks/target/,$CI_PROJECT_DIR/apex-squid/target/,$CI_PROJECT_DIR/apex-toolkit/target/,$CI_PROJECT_DIR/sonar-apex-plugin/target/
      -Dsonar.junit.reportPaths=$CI_PROJECT_DIR/apex-checks/target/surefire-reports,$CI_PROJECT_DIR/apex-squid/target/surefire-reports,$CI_PROJECT_DIR/sonar-apex-plugin/target/surefire-reports
      -Dsonar.jacoco.reportPaths=$CI_PROJECT_DIR/apex-checks/target/jacoco.exec,$CI_PROJECT_DIR/apex-squid/target/jacoco.exec,$CI_PROJECT_DIR/sonar-apex-plugin/target/jacoco.exec
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
      -Dsonar.gitlab.max_blocker_issues_gate=5
      -Dsonar.gitlab.max_critical_issues_gate=5
  cache:
    key: $CI_PIPELINE_ID
    paths:
      - apex-checks/target/
      - apex-squid/target/
      - apex-toolkit/target/
      - sonar-apex-plugin/target/

backup_and_update:
  stage: deploy
  when: manual
  script:
    - echo "$HOST_KEY" >> known_hosts
    - echo "$SONAR_SERVER_KEY" > sonar.key
    - chmod 600 sonar.key
    - echo "========"
    - echo "Backing up the existing plugin"
    - scp -i sonar.key -o "UserKnownHostsFile known_hosts" $SONAR_SERVER_USER@$SONAR_SERVER_IP:$SONAR_PLUGIN_LOCATION $BACKUP_LOCATION
    - echo "========"
    - echo "Publishing the new plugin"
    - scp -i sonar.key -o "UserKnownHostsFile known_hosts" $JAR_LOCATION $SONAR_SERVER_USER@$SONAR_SERVER_IP:$SONAR_PLUGIN_LOCATION
    - echo "========"
    - echo "Restarting the server"
    - ssh -i sonar.key -o "UserKnownHostsFile known_hosts" $SONAR_SERVER_USER@$SONAR_SERVER_IP 'sudo ./sonar-ctl.sh restart &>/dev/null &'
  artifacts:
    name: $CI_PIPELINE_ID/backup
    paths:
      - $BACKUP_LOCATION
    when: on_success
    expire_in: 1 week

restore_plugin_from_backup:
  stage: rollback
  when: manual
  script:
    - echo "$HOST_KEY" >> known_hosts
    - echo "$SONAR_SERVER_KEY" > sonar.key
    - chmod 600 sonar.key
    - ls $BACKUP_LOCATION
    - echo "========"
    - echo "Writing backup plugin to server"
    - scp -i sonar.key -o "UserKnownHostsFile known_hosts" $BACKUP_LOCATION $SONAR_SERVER_USER@$SONAR_SERVER_IP:$SONAR_PLUGIN_LOCATION
    - echo "========"
    - echo "Restarting the server"
    - ssh -i sonar.key -o "UserKnownHostsFile known_hosts" $SONAR_SERVER_USER@$SONAR_SERVER_IP 'sudo ./sonar-ctl.sh restart &>/dev/null &'
  dependencies:
    - backup_and_update

.build_folders: &cache_builds
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
    - apex-checks/target/
    - apex-squid/target/
    - apex-toolkit/target/
    - sonar-apex-plugin/target/
