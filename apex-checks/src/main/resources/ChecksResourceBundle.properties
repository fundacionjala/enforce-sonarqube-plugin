#
# Copyright (c) Fundacion Jala. All rights reserved.
# Licensed under the MIT license. See LICENSE file in the project root for full license information.
#

#Old checks
AssertMethodCheckEqualsMessage = It's bad practice to use assert(value, value).
AssertMethodCheckAssertMessage = It's bad practice to use assert(true).
ClassNameCheckMessage = Rename class "{0}" to match the regular expression {1}.
DeprecatedMethodCheckMessage = The "%s" method is deprecated, suggest deleting the contents of the method.
DmlInConsCheckMessage = The DML statement "%s", can not be inside a constructor.
DmlInForCheckMessage = The DML statement "%s", can not be inside a for loop.
DmlInWhileCheckMessage = The DML statement "%s", can not be inside a while loop.
MethodNameCheckMessage = Rename method "{0}" to match the regular expression {1}.
TestMethodCheckMessage = The "%s" method corresponds to a test class.

#Check messages
AsyncMethodsCheckMessage = Method "{0}" is Async, should not be called within a loop.
IdsInVariablesCheckMessage = The "%s" variable has hard-coded lines.
HardcodingIdsInMethodsCheck = Line %d contains hard-coded value %s.
TestClassCheckAnnotationMessage = The "@isTest" annotation should be used only for classes, remove it from the declaration of "{0}".
TestClassCheckNameMessage = The name of the class "{0}" suggests this is a test class, either add an "@isTest" annotation or change the name of the class.
TestMethodsCheckMessage = The method "{0}" is marked as a testMethod but it is not in a test class, move it to a proper class or add the "@isTest" annotation to the class "{1}".
AssertionError = Test method at line %d should have at least one assertion.
TestMethodKeywordError = Test method in line %d must have testMethod keyword.
SeeAllDataCheckMessage = Class "{0}" is using the annotation "@isTest" with the "(seeAllData = true)" parameter, this is not recommendable; you can leave the annotation, but you should remove the parameter.
TestMethodParametersError = Test method in line {0} has parameters, test methods should not have parameters.
LiteralBooleanAssertCheckMessage = The method "{0}" is passing an assertion a literal boolean value, this is a bad practice.
AssertionMessageCheckMessage = Test method "{0}" is calling an assertion, it is recommendable to pass a message in case of test failure.
StartAndStopCheckMessage = The test method "{0}" is calling "Test.testStart" and/or "Test.testStop" more than once.

RecoveryCheckMessage = Parsing error found, the block was skipped during the analysis.
